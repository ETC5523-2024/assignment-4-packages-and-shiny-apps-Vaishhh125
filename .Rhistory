usethis::use_readme_rmd()
usethis::use_mit_license("Vaishnavi Amuda")
usethis::use_data_raw('AIriskjobs')
AIriskjobs <- read_csv("data /ai_job_market_insights.csv", show_col_types = FALSE)
library(readr)
AIriskjobs <- read_csv("data /ai_job_market_insights.csv", show_col_types = FALSE)
AIriskjobs <- read_csv("data-raw/ai_job_market_insights.csv", show_col_types = FALSE)
View(AIriskjobs)
usethis::use_data(AIriskjobs, overwrite = TRUE)
devtools::load_all()
devtools::load_all()
devtools::load_all()
AIriskjobs
library(readr)
AIriskjobs <- read_csv("data-raw/ai_job_market_insights.csv", show_col_types = FALSE)
usethis::use_data(AIriskjobs, overwrite = TRUE)
devtools::load_all()
devtools::load_all()
devtools::load_all()
AIriskjobs
use_r("AIriskjobs.R")
usethis::use_r("AIriskjobs.R")
View(AIriskjobs)
use_roxygen_md()
usethis::use_roxygen_md()
devtools::document()
devtools::load_all()
devtools::check()
devtools::check()
devtools::install()
?AIriskjobs
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Analyze job risk
risk_analysis <- analyze_job_risk(AIriskjobs)
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
#' Analyze Job Automation Risk by Industry
#'
#' @param data A data frame containing job information, including Industry, Company_Size, AI_adoption_level, Automation_Risk, and Salary_USD.
#' @return A list containing:
#' - average salary by industry
#' - high-risk job titles in industries with high AI adoption.
#' @import dplyr
#' @export
analyze_job_automation_risk <- function(data) {
# Ensure necessary columns are present
required_columns <- c("Job_Title", "Industry", "Company_Size", "AI_adoption_level", "Automation_Risk", "Salary_USD")
missing_columns <- setdiff(required_columns, colnames(data))
if (length(missing_columns) > 0) {
stop("The dataset is missing these required columns: ", paste(missing_columns, collapse = ", "))
}
# Calculate average salary by industry
avg_salary_by_industry <- data %>%
group_by(Industry) %>%
summarize(avg_salary = mean(Salary_USD, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
# Identify high-risk jobs in industries with high AI adoption
high_risk_jobs <- data %>%
filter(AI_adoption_level == "high", Automation_Risk == "high") %>%
select(Job_Title, Industry, Company_Size, Salary_USD, Remote_Friendly, Job_Growth_projection) %>%
arrange(desc(Salary_USD))
# Return results as a list
result <- list(
avg_salary_by_industry = avg_salary_by_industry,
high_risk_jobs = high_risk_jobs
)
return(result)
}
#' Analyze Job Automation Risk by Industry
#'
#' @param data A data frame containing job information, including Industry, Company_Size, AI_adoption_level, Automation_Risk, and Salary_USD.
#' @return A list containing:
#' - average salary by industry
#' - high-risk job titles in industries with high AI adoption.
#' @import dplyr
#' @export
analyze_job_automation_risk <- function(data) {
# Ensure necessary columns are present
required_columns <- c("Job_Title", "Industry", "Company_Size", "AI_adoption_level", "Automation_Risk", "Salary_USD")
missing_columns <- setdiff(required_columns, colnames(data))
if (length(missing_columns) > 0) {
stop("The dataset is missing these required columns: ", paste(missing_columns, collapse = ", "))
}
# Calculate average salary by industry
avg_salary_by_industry <- data %>%
group_by(Industry) %>%
summarize(avg_salary = mean(Salary_USD, na.rm = TRUE)) %>%
arrange(desc(avg_salary))
# Identify high-risk jobs in industries with high AI adoption
high_risk_jobs <- data %>%
filter(AI_adoption_level == "high", Automation_Risk == "high") %>%
select(Job_Title, Industry, Company_Size, Salary_USD, Remote_Friendly, Job_Growth_projection) %>%
arrange(desc(Salary_USD))
# Return results as a list
result <- list(
avg_salary_by_industry = avg_salary_by_industry,
high_risk_jobs = high_risk_jobs
)
return(result)
}
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
View(AIriskjobs)
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
install.packages("AIriskjobs")
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
force(AIriskjobs)
View(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
View(AIriskjobs)
# Load the AIriskjobs package
library(AIriskjobs)
# Load the dataset
data("AIriskjobs")
# Assuming your dataset is loaded as AIriskjobs
result <- analyze_job_automation_risk(AIriskjobs)
install.packages("AIriskjobs")
install.packages("AIriskjobs")
install.packages("AIriskjobs")
result <- analyze_job_automation_risk(AIriskjobs)
library(dplyr)
result <- analyze_job_automation_risk(AIriskjobs)
colnames(AIriskjobs)
colnames(AIriskjobs)[colnames(AIriskjobs) == "AI_Adoption_Level"] <- "AI_adoption_level"
colnames(AIriskjobs)[colnames(AIriskjobs) == "AI_Adoption_Level"] <- "AI_adoption_level"
colnames(AIriskjobs)
View(AIriskjobs)
View(AIriskjobs)
result <- analyze_job_automation_risk(AIriskjobs)
View(AIriskjobs)
colnames(AIriskjobs)[colnames(AIriskjobs) == "AI_adoption_level"] <- "AI_Adoption_Level"
# Load the required packages
library(shiny)
library(dplyr)
devtools::load_all()
AIriskjobs
shiny::runApp('inst/jobsatrisk')
View(AIriskjobs)
runApp('inst/jobsatrisk')
View(AIriskjobs)
runApp('inst/jobsatrisk')
runApp('inst/jobsatrisk')
runApp('inst/jobsatrisk')
install.packages("AIriskjobs")
pak::pak("ETC5523-2024/assignment-4-packages-and-shiny-apps-Vaishhh125")
shiny::runApp('inst/jobsatrisk')
runApp('inst/jobsatrisk')
runApp('inst/jobsatrisk')
view(AIrisk)
devtools::document()
runApp('inst/jobsatrisk')
# Install devtools if you haven't already
install.packages("devtools")
# Install AIriskjobs
devtools::install_github("https://github.com/ETC5523-2024/assignment-4-packages-and-shiny-apps-Vaishhh125/AIriskjobs")
install.packages("devtools")
library(AIriskjobs)
run_app()
devtools::load_all("data-raw/AIriskjobs.R")
library(AIriskjobs)
run_app()
devtools::document()
library(AIriskjobs)
run_app()
run_app()
devtools::load_all()
AIriskjobs::run_app()
AIriskjobs::run_app()
runApp()
AIriskjobs::run_app()
devtools::check()
usethis::use_package("shiny")
devtools::check()
library(AIriskjobs)
run_app()
library(AIriskjobs)
run_app()
runApp('~/Desktop/Assignments/ETC5523/assignment-4-packages-and-shiny-apps-Vaishhh125/inst/shinyapp')
runApp('~/Desktop/Assignments/ETC5523/assignment-4-packages-and-shiny-apps-Vaishhh125/inst/shinyapp')
runApp('~/Desktop/Assignments/ETC5523/assignment-4-packages-and-shiny-apps-Vaishhh125/inst/shinyapp')
runApp('~/Desktop/Assignments/ETC5523/assignment-4-packages-and-shiny-apps-Vaishhh125/inst/shinyapp')
library(AIriskjobs)
run_app()
# Install devtools if you haven't already
install.packages("devtools")
# Install AIriskjobs
devtools::install_github("https://github.com/ETC5523-2024/assignment-4-packages-and-shiny-apps-Vaishhh125/AIriskjobs")
devtools::document()
